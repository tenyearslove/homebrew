import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.CopyOption;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.util.Scanner;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    byte[] bin = new byte[307200];
    public void getGreeting() {
        getMp3();
        updateMp3();
    }

    public void updateMp3() {
        try {
            Scanner scanner = new Scanner(new File("book1_word.txt"));
            while (scanner.hasNext()) {
                String line = scanner.nextLine();
                String splited[] = line.split(";");

                String day = String.format("%02d", Integer.parseInt(splited[1]));
                String word_eng = splited[7];
                String word_kor = splited[8];
                String sound_eng = splited[10];
                String sound_kor = splited[11];

                copyMp3(sound_eng, word_eng + ".mp3", day);
                copyMp3(sound_kor, word_eng + "_kor.mp3", day);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void copyMp3(String src, String dst, String day) {
        try {
            String srcPathString = "mp3" + "/" + src;
            String dstPathString = "output/" + day + "/" + dst;
//            String dstPathString = "output/" + dst;

            File srcFile = new File(srcPathString);
            File dstFile = new File(dstPathString);

            if (dstFile.getParentFile().exists() == false) {
                dstFile.getParentFile().mkdir();
            }

            Files.copy(srcFile.toPath(), dstFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void getMp3() {
        try {
            Scanner scanner = new Scanner(new File("book2_offset.txt"));
            while (scanner.hasNext()) {
                String line = scanner.nextLine();
                String splited[] = line.split(",");

                saveMp3(splited[1], Integer.parseInt(splited[2]), Integer.parseInt(splited[3]), splited[4]);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void saveMp3(String zfile, int zstart, int zlength, String zplayfile) {
        try {
            FileInputStream is = new FileInputStream("dat/" + zfile);
            is.skip(zstart);
            is.read(bin, 0, zlength);
            is.close();

            FileOutputStream os = new FileOutputStream("mp3/" + zplayfile);
            os.write(bin, 0, zlength);
            os.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        new App().getGreeting();
    }
}
