import org.fredy.jsrt.api.SRT;
import org.fredy.jsrt.api.SRTInfo;
import org.fredy.jsrt.api.SRTReader;
import org.fredy.jsrt.api.SRTTimeFormat;
import org.fredy.jsrt.api.SRTWriter;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.text.SimpleDateFormat;
import java.util.Date;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private static final int CHUNK = 1;
    private static final int CHUNK = 1;
    private static final String title = "Despicable Me 2 2013";
    private static final String MOVIE = "Despicable Me 2 2013.mkv";//"Olafs.Frozen.Adventure.2017.1080p.WEB-DL.DD5.1.H.264-LAZY.mkv";

    public void trim() {
        SRTInfo info = SRTReader.read(new File(title + ".srt"));
        SRTInfo newInfo = new SRTInfo();
        int newSequence = 1;
        for (SRT s : info) {
            System.out.println("Number: " + s.number);
            System.out.println("Start time: " + SRTTimeFormat.format(s.startTime));
            System.out.println("End time: " + SRTTimeFormat.format(s.endTime));
            System.out.println("Texts:");
            for (String line : s.text) {
                System.out.println("    " + line);
            }
            System.out.println();

            if (s.text.size() > 0) {
                newInfo.add(new SRT(newSequence++, s.startTime, s.endTime, s.text));
            }
        }

        SRTWriter.write(new File(title + ".trim.srt"), newInfo);
    }
    public void chunking() {
        try {
            System.setOut(new PrintStream(new FileOutputStream("output/index.html")));
            System.out.println("<HTML><BODY><TABLE cellpadding=\"5\" cellspacing=\"0\" border=\"1\" style=\"border-collapse:collapse; border:1px gray solid;\">");
            SRTInfo info = SRTReader.read(new File(title + ".trim.srt"));
            StringBuffer sb = new StringBuffer();
            SRTBundle bundle = null;
            for (SRT s : info) {
                if (bundle == null) {
                    bundle = new SRTBundle();
                    bundle.number = s.number;
                    bundle.startTime = s.startTime;
                }

                bundle.text += "<P>";
                for (String x : s.text) {
                    bundle.text += (x + " ");
                }
                bundle.text += "</P>";

                if (s.number % CHUNK == 0) {
                    bundle.endTime = s.endTime;
//                    ffmpeg(bundle);
                    ffmpeg2(bundle);
                    bundle = null;
                }
            }
            if (bundle != null) {
                ffmpeg(bundle);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void ffmpeg(SRTBundle bundle) {
        try {
            System.out.println("<TR>");
            SimpleDateFormat SDF = new SimpleDateFormat("HH:mm:ss");
            String outputFile = String.format(title.replaceAll(" ", "_") + "_%04d.jpg", bundle.number);
            String command = String.format("ffmpeg -ss %s -i \"%s\" -vframes 1 -s 160x100 output/%s -y", SDF.format(bundle.startTime), MOVIE, outputFile);
//            long diff = (bundle.endTime.getTime() - bundle.startTime.getTime() + 500) / 1000;
//            Date sdate = new Date(bundle.startTime.getTime() - 500);
//            String outputFile = String.format(title + "_%04d", bundle.number);
//            String command = String.format("ffmpeg -ss %s -t %d -i \"%s\" -acodec copy -vcodec copy output2/%s.mkv", SDF.format(sdate), diff, MOVIE, outputFile);
            System.out.println(String.format("<TD align=\"center\">%04d</TD>", bundle.number));
            System.out.println(String.format("<TD><IMG SRC='%s'></TD>", outputFile));
            System.out.println(String.format("<TD>%s</TD>", bundle.text));
            System.err.println(command);
//            Runtime.getRuntime().exec(command);
            System.out.print("</TR>");
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void ffmpeg2(SRTBundle bundle) {
        try {
            System.out.println("<TR>");
            SimpleDateFormat SDF = new SimpleDateFormat("HH:mm:ss.sss");
            SimpleDateFormat SDF2 = new SimpleDateFormat("ss.sss");
            Date diff = new Date(bundle.endTime.getTime() - bundle.startTime.getTime() + 1000);
            Date sdate = new Date(bundle.startTime.getTime() - 300);
            String outputFile = String.format(title + "_%04d", bundle.number);
            String command = String.format("ffmpeg -i \"%s\" -ss %s -t %s -acodec copy -vcodec copy \"output2/%s.mp4\" -y", MOVIE, SDF.format(sdate), SDF2.format(diff), outputFile);
            System.err.println(command);
//            Runtime.getRuntime().exec(command);
            System.out.print("</TR>");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        new App().chunking();
    }

    public static class SRTBundle {
        public int number;
        public Date startTime;
        public Date endTime;
        public String text = "";
    }
}
