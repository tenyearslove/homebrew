import com.google.gson.Gson;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Stream;

import gson.Dic;
import gson.Phrase;
import gson.Word;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    public void getGreeting() throws Exception {

        Scanner scanner = new Scanner(new FileInputStream("15.txt"));
        OkHttpClient client = new OkHttpClient.Builder().build();

        List<String> candidateList = new ArrayList<>();
        while (scanner.hasNext()) {
            candidateList.add(scanner.next().toLowerCase());
        }

        String[] candidates = new String[candidateList.size()];
        candidateList.toArray(candidates);
        String[] goodCandidates = codify(candidates);
        for (String englishWord : goodCandidates) {
            Dic dic = getDictionary(client, englishWord);
            List<String> koreanList = new ArrayList<>();
            for (Word koreanWord : dic.getTuc()) {
                Phrase phrase = koreanWord.getPhrase();
                if (phrase != null) {
                    koreanList.add(phrase.getText());
                }
            }
            if (koreanList.size() == 0) {
                try {
                    String meaning = dic.getTuc()[0].getMeanings()[0].getText();
                    meaning.replaceAll("\\<i\\>", "").replaceAll("\\<\\/i\\>", "").replaceAll("\\[i\\]", "").replaceAll("\\[\\/i\\]", "");
                    koreanList.add(meaning);
                } catch (Exception e) {

                }
            }
            koreanList.add(0, englishWord);
            String joined = String.join("|", koreanList);
            System.out.println(joined);
        }
    }

    private Dic getDictionary(OkHttpClient client, String word) throws IOException {
        Request request = new Request.Builder()
                .url("https://glosbe.com/gapi/translate?from=eng&dest=kor&format=json&pretty=true&phrase=" + word)
                .build();
        Response response = client.newCall(request).execute();
        String jsonString = response.body().string();

        Gson gson = new Gson();
        Dic dic = gson.fromJson(jsonString, Dic.class);

        return dic;
    }

    private String[] codify(String[] words) {
        String[] codified = new HashSet<String>(Arrays.asList(words)).toArray(new String[0]);
        Arrays.sort(codified);
        Stream<String> stream = Arrays.stream(codified).filter(s -> s.length() > 3).filter(s -> hasSpecialCharacter(s) == false);
        String[] goods = stream.toArray(String[]::new);

        return goods;
    }

    private boolean hasSpecialCharacter(String s) {
        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            if (Character.isAlphabetic(ch) == false) {
                return true;
            }
        }

        return false;
    }

    public static void main(String[] args) throws Exception {
        new App().getGreeting();
    }
}
